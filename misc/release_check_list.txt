- Do all unit tests pass?
- Run regression tests
- Update Version
   * README.md
   * Android example should reference latest BoofCV
   * build.gradle
- Set release data in change.txt
- Make sure all examples work
- Make sure all applications in evaluation work
- Make sure android still works
- Update examples on website
  * See what needs to be updated since TAG_NAME "git diff --name-status TAG_NAME examples"
- Make sure external dependencies are meet and everything builds
  * Android
  * OpenKinect

--- Fresh Checkout ---
BUILD USING JAVA 1.8 FOR ANDROID COMPATIBILITY!!!

JDK=-Dorg.gradle.java.home=/opt/jdk/jdk1.8.0_211/
VERSION=v0.XX
git clone -b SNAPSHOT --recursive git@github.com:lessthanoptimal/BoofCV.git boofcv
cd boofcv;./gradlew $JDK createVersionFile;rm -rf .git;cd ..;zip -r boofcv-$VERSION-src.zip boofcv
cd boofcv;./gradlew $JDK createLibraryDirectory;mv boofcv-*-libs ..;cd ..;zip -r boofcv-$VERSION-libs.zip boofcv-*-libs
cd boofcv;rm -rf docs/api-web;./gradlew $JDK alljavadocWeb;zip -r api.zip docs/api-web

-- Make Sure Tests Pass Again --
./gradlew testReport

-- Upload Files ---

scp boofcv-$VERSION-libs.zip pabeles@frs.sourceforge.net:/home/frs/project/boofcv/$VERSION/
scp boofcv-$VERSION-src.zip pabeles@frs.sourceforge.net:/home/frs/project/boofcv/$VERSION/

--- Create javadoc for websites --
- Upload api.zip created previously to website
- Tag git
- Update version on website

-- Applications
Update prebuilt applications and demonstrations using https://github.com/lessthanoptimal/BoofApplications

----
Gradle

To post a SNAPSHOT or full release:

1) ./gradlew assemble
2) In gradle.properties comment out "org.gradle.parallel=true"
3) Uncomment the following line in build.gradle so that it creates javadoc. Commented out to speed up build
   archives javadocJar
4) Upload to Sonatype
   - ./gradlew clean;./gradlew $JDK uploadArchives

A SNAPSHOT is created if SNAPSHOT is in its name.

log onto http://oss.sonatype.org
